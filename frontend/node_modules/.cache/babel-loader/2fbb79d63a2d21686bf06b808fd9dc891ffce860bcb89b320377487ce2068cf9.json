{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./TaskList.css\";\n\n// const API_URL = \"http://localhost:8000/tasks/\";\n\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState({ title: \"\", description: \"\", date: \"\", time: \"\" });\n\n//First Restframework trial\n//-----\n// const [details, setDetails] = useState([]);\n\n// useEffect(() => {\n//   axios.get('http://localhost:8000')  \n//   .then(res => {\n//     setDetails(res.data);\n//   })\n//   .catch(err => console.error(\"Error fetching data:\", err));\n// }, []);\n//------\n\n// useEffect(() => {\n//   fetchTasks();\n// }, []);\n\n// const fetchTasks = async () => {\n//   try {\n//     const response = await axios.get(API_URL);\n//     console.log(\"Fetched Tasks:\", response.data);\n//     setTasks(response.data);\n//   } catch (error) {\n//     console.error(\"Error fetching tasks:\", error);\n//   }\n// };\n\n// const addTask = async () => {\n//   if (!newTask.title || !newTask.date || !newTask.time) {\n//     alert(\"Please fill in all required fields!\");\n//     return;\n//   }\n//   try {\n//     await axios.post(API_URL, { ...newTask, completed: false });\n//     fetchTasks();\n//     setNewTask({ title: \"\", description: \"\", date: \"\", time: \"\" });\n//   } catch (error) {\n//     console.error(\"Error adding task:\", error);\n//   }\n// };\n\n// const toggleComplete = async (id, completed) => {\n//   try {\n//     await axios.patch(`${API_URL}${id}/`, { completed: !completed });\n//     fetchTasks();\n//   } catch (error) {\n//     console.error(\"Error updating task:\", error);\n//   }\n// };\n\n// const deleteTask = async (id) => {\n//   try {\n//     await axios.delete(`${API_URL}${id}/`);\n//     fetchTasks();\n//   } catch (error) {\n//     console.error(\"Error deleting task:\", error);\n//   }\n// };\n\n// return (\n//   <>\n/* <div>\r\n  <header>Data Generated From Django</header>\r\n    <hr />\r\n      {details.length > 0 ? (\r\n      details.map((output, id) => (\r\n        <div key={id}>\r\n          <h2>{output.employee}</h2>\r\n          <h3>{output.department}</h3>\r\n        </div>\r\n      ))\r\n         ) : (\r\n           <p>Loading...</p>\r\n    )}\r\n  </div> */\n\n/* <div className=\"task-container\">\r\n  <h2>Farmer's Task List</h2>\r\n    <div className=\"task-input\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Task Title\"\r\n      value={newTask.title}\r\n      onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n    />\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Description\"\r\n      value={newTask.description}\r\n      onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n    />\r\n    <input\r\n      type=\"date\"\r\n      value={newTask.date}\r\n      onChange={(e) => setNewTask({ ...newTask, date: e.target.value })}\r\n    />\r\n    <input\r\n      type=\"time\"\r\n      value={newTask.time}\r\n      onChange={(e) => setNewTask({ ...newTask, time: e.target.value })}\r\n    />\r\n    <button onClick={addTask}>Add Task</button>\r\n  </div>\r\n    <ul className=\"task-list\">\r\n    {tasks.map((task) => (\r\n      <li key={task.id} className={task.completed ? \"completed\" : \"\"}>\r\n        <div>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <p>Date: {task.date}</p>\r\n          <p>Time: {task.time}</p>\r\n        </div>\r\n        <div className=\"task-buttons\">\r\n          <button onClick={() => toggleComplete(task.id, task.completed)}>\r\n            {task.completed ? \"Undo\" : \"Complete\"}\r\n          </button>\r\n          <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n        </div>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n</div>\r\n</>\r\n);\r\n};\r\nexport default TaskList; */\n\n// function TaskList() {\n//   const [details, setDetails] = useState([]);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8000')  \n//       .then(res => {\n//         setDetails(res.data);\n//       })\n//       .catch(err => console.error(\"Error fetching data:\", err));\n//   }, []);\n\n//   return (\n//     <div>\n//         <header>Data Generated From Django</header>\n//         <hr />\n//             {details.length > 0 ? (\n//               details.map((output, id) => (\n//                 <div key={id}>\n//                   <h2>{output.employee}</h2>\n//                   <h3>{output.department}</h3>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>Loading...</p>\n//             )}\n//           </div>\n//   );\n// }\n\n// export default TaskList;","map":{"version":3,"names":[],"sources":["D:/react_django/frontend/src/components/TaskList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./TaskList.css\";\r\n\r\n// const API_URL = \"http://localhost:8000/tasks/\";\r\n\r\n// const TaskList = () => {\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [newTask, setNewTask] = useState({ title: \"\", description: \"\", date: \"\", time: \"\" });\r\n\r\n  //First Restframework trial\r\n  //-----\r\n  // const [details, setDetails] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   axios.get('http://localhost:8000')  \r\n  //   .then(res => {\r\n  //     setDetails(res.data);\r\n  //   })\r\n  //   .catch(err => console.error(\"Error fetching data:\", err));\r\n  // }, []);\r\n    //------\r\n\r\n  // useEffect(() => {\r\n  //   fetchTasks();\r\n  // }, []);\r\n\r\n  // const fetchTasks = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(API_URL);\r\n  //     console.log(\"Fetched Tasks:\", response.data);\r\n  //     setTasks(response.data);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching tasks:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const addTask = async () => {\r\n  //   if (!newTask.title || !newTask.date || !newTask.time) {\r\n  //     alert(\"Please fill in all required fields!\");\r\n  //     return;\r\n  //   }\r\n  //   try {\r\n  //     await axios.post(API_URL, { ...newTask, completed: false });\r\n  //     fetchTasks();\r\n  //     setNewTask({ title: \"\", description: \"\", date: \"\", time: \"\" });\r\n  //   } catch (error) {\r\n  //     console.error(\"Error adding task:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const toggleComplete = async (id, completed) => {\r\n  //   try {\r\n  //     await axios.patch(`${API_URL}${id}/`, { completed: !completed });\r\n  //     fetchTasks();\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating task:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const deleteTask = async (id) => {\r\n  //   try {\r\n  //     await axios.delete(`${API_URL}${id}/`);\r\n  //     fetchTasks();\r\n  //   } catch (error) {\r\n  //     console.error(\"Error deleting task:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // return (\r\n  //   <>\r\n    /* <div>\r\n      <header>Data Generated From Django</header>\r\n        <hr />\r\n          {details.length > 0 ? (\r\n          details.map((output, id) => (\r\n            <div key={id}>\r\n              <h2>{output.employee}</h2>\r\n              <h3>{output.department}</h3>\r\n            </div>\r\n          ))\r\n             ) : (\r\n               <p>Loading...</p>\r\n        )}\r\n      </div> */\r\n\r\n    /* <div className=\"task-container\">\r\n      <h2>Farmer's Task List</h2>\r\n\r\n      <div className=\"task-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Title\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={newTask.date}\r\n          onChange={(e) => setNewTask({ ...newTask, date: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          value={newTask.time}\r\n          onChange={(e) => setNewTask({ ...newTask, time: e.target.value })}\r\n        />\r\n        <button onClick={addTask}>Add Task</button>\r\n      </div>\r\n\r\n      <ul className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className={task.completed ? \"completed\" : \"\"}>\r\n            <div>\r\n              <h3>{task.title}</h3>\r\n              <p>{task.description}</p>\r\n              <p>Date: {task.date}</p>\r\n              <p>Time: {task.time}</p>\r\n            </div>\r\n            <div className=\"task-buttons\">\r\n              <button onClick={() => toggleComplete(task.id, task.completed)}>\r\n                {task.completed ? \"Undo\" : \"Complete\"}\r\n              </button>\r\n              <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList; */\r\n\r\n\r\n\r\n// function TaskList() {\r\n//   const [details, setDetails] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:8000')  \r\n//       .then(res => {\r\n//         setDetails(res.data);\r\n//       })\r\n//       .catch(err => console.error(\"Error fetching data:\", err));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//         <header>Data Generated From Django</header>\r\n//         <hr />\r\n//             {details.length > 0 ? (\r\n//               details.map((output, id) => (\r\n//                 <div key={id}>\r\n//                   <h2>{output.employee}</h2>\r\n//                   <h3>{output.department}</h3>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>Loading...</p>\r\n//             )}\r\n//           </div>\r\n//   );\r\n// }\r\n\r\n// export default TaskList;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}