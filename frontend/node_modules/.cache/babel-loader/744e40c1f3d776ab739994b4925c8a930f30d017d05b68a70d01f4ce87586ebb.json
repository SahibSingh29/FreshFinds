{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_django\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [imagePreview, setImagePreview] = useState(null);\n  const [lineMoving, setLineMoving] = useState(false); // To track line animation state\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n\n    // Generate a preview of the selected image\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file first!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    // Start the upload and line animation\n    setPrediction(''); // Reset prediction before fetching\n    setLineMoving(true); // Start the line animation\n\n    // Delay the display of prediction\n    setTimeout(async () => {\n      try {\n        const response = await fetch('http://localhost:8000/predict/', {\n          method: 'POST',\n          body: formData\n        });\n        const data = await response.json();\n        setPrediction(data.prediction); // Assuming Django returns { prediction: 'some result' }\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n      setLineMoving(false); // Stop the line animation once prediction is ready\n    }, 2000); // 2-second delay for better user experience\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-fol\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"upload-heading\",\n        children: \"Upload an Image for Disease Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileChange,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePreview,\n          alt: \"Uploaded Preview\",\n          className: \"image-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), lineMoving && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moving-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"prediction-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Prediction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 53\n        }, this), \" \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"b2A4qa498Pwvu+Y/fnxDbwvn8RQ=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUpload","_s","selectedFile","setSelectedFile","prediction","setPrediction","imagePreview","setImagePreview","lineMoving","setLineMoving","handleFileChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUpload","alert","formData","FormData","append","setTimeout","response","fetch","method","body","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/react_django/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [lineMoving, setLineMoving] = useState(false); // To track line animation state\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    // Generate a preview of the selected image\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImagePreview(reader.result);\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert(\"Please select a file first!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n\r\n    // Start the upload and line animation\r\n    setPrediction(''); // Reset prediction before fetching\r\n    setLineMoving(true); // Start the line animation\r\n\r\n    // Delay the display of prediction\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/predict/', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        const data = await response.json();\r\n        setPrediction(data.prediction); // Assuming Django returns { prediction: 'some result' }\r\n      } catch (error) {\r\n        console.error(\"Error uploading file:\", error);\r\n      }\r\n\r\n      setLineMoving(false); // Stop the line animation once prediction is ready\r\n    }, 2000); // 2-second delay for better user experience\r\n  };\r\n\r\n  return (\r\n    <div className='main-fol'>\r\n    <div className=\"image-upload-container\">\r\n      <h2 className=\"upload-heading\">Upload an Image for Disease Prediction</h2>\r\n      \r\n      <div className=\"file-input-wrapper\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileChange}\r\n          className=\"file-input\"\r\n        />\r\n        <button\r\n          className=\"upload-btn\"\r\n          onClick={handleUpload}\r\n        >\r\n          Upload\r\n        </button>\r\n      </div>\r\n\r\n      {imagePreview && (\r\n        <div className=\"image-preview-wrapper\">\r\n          <img src={imagePreview} alt=\"Uploaded Preview\" className=\"image-preview\" />\r\n          \r\n          {lineMoving && <div className=\"moving-line\"></div>}\r\n        </div>\r\n      )}\r\n\r\n      {prediction && <p className=\"prediction-text\"><strong>Prediction:</strong> {prediction}</p>}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}