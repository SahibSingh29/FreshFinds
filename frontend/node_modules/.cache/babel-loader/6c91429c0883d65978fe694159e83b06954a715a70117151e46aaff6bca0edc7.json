{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_django\\\\frontend\\\\src\\\\components\\\\CommunityPostCreate.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityPostCreate = () => {\n  _s();\n  const [content, setContent] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // For showing loading state\n  const [errorMessage, setErrorMessage] = useState(''); // For displaying errors\n\n  const submitPost = async () => {\n    setIsLoading(true); // Start loading\n    setErrorMessage(''); // Clear previous errors\n\n    const token = sessionStorage.getItem('token'); // Get the token from sessionStorage\n    if (!token) {\n      setIsLoading(false);\n      setErrorMessage('You are not logged in. Please log in first.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8000/api/community-posts/', {\n        content\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setContent(''); // Clear content after posting\n      alert('Post created!');\n    } catch (error) {\n      console.error('Error creating post:', error);\n      setErrorMessage('Failed to create post. Please try again.');\n    } finally {\n      setIsLoading(false); // End loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Community Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter content\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitPost,\n      disabled: isLoading,\n      children: [\"  \", isLoading ? 'Posting...' : 'Post']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunityPostCreate, \"0nrKk3LHDQ02l6c0t9foPZPdhao=\");\n_c = CommunityPostCreate;\nexport default CommunityPostCreate;\nvar _c;\n$RefreshReg$(_c, \"CommunityPostCreate\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","CommunityPostCreate","_s","content","setContent","isLoading","setIsLoading","errorMessage","setErrorMessage","submitPost","token","sessionStorage","getItem","response","post","headers","Authorization","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","color","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/react_django/frontend/src/components/CommunityPostCreate.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CommunityPostCreate = () => {\r\n  const [content, setContent] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);  // For showing loading state\r\n  const [errorMessage, setErrorMessage] = useState('');  // For displaying errors\r\n\r\n  const submitPost = async () => {\r\n    setIsLoading(true);  // Start loading\r\n    setErrorMessage('');  // Clear previous errors\r\n\r\n    const token = sessionStorage.getItem('token');  // Get the token from sessionStorage\r\n    if (!token) {\r\n      setIsLoading(false);\r\n      setErrorMessage('You are not logged in. Please log in first.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:8000/api/community-posts/', \r\n        { content },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      setContent('');  // Clear content after posting\r\n      alert('Post created!');\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n      setErrorMessage('Failed to create post. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);  // End loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Community Post</h2>\r\n      <textarea\r\n        placeholder=\"Enter content\"\r\n        value={content}\r\n        onChange={e => setContent(e.target.value)}\r\n      />\r\n      <br />\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>} {/* Show error message */}\r\n      <button onClick={submitPost} disabled={isLoading}>  {/* Disable button while loading */}\r\n        {isLoading ? 'Posting...' : 'Post'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityPostCreate;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EACpD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEvD,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BH,YAAY,CAAC,IAAI,CAAC,CAAC,CAAE;IACrBE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAE;;IAEtB,MAAME,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;IAChD,IAAI,CAACF,KAAK,EAAE;MACVJ,YAAY,CAAC,KAAK,CAAC;MACnBE,eAAe,CAAC,6CAA6C,CAAC;MAC9D;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,4CAA4C,EAC5C;QAAEX;MAAQ,CAAC,EACX;QACEY,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAEDN,UAAU,CAAC,EAAE,CAAC,CAAC,CAAE;MACjBa,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CV,eAAe,CAAC,0CAA0C,CAAC;IAC7D,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC,CAAC,CAAE;IACxB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BxB,OAAA;MACEyB,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAEvB,OAAQ;MACfwB,QAAQ,EAAEC,CAAC,IAAIxB,UAAU,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLjB,YAAY,iBAAIP,OAAA;MAAG8B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAX,QAAA,EAAEb;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eACjExB,OAAA;MAAQgC,OAAO,EAAEvB,UAAW;MAACwB,QAAQ,EAAE5B,SAAU;MAAAe,QAAA,GAAC,IAAE,EACjDf,SAAS,GAAG,YAAY,GAAG,MAAM;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACtB,EAAA,CArDID,mBAAmB;AAAAiC,EAAA,GAAnBjC,mBAAmB;AAuDzB,eAAeA,mBAAmB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}