{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_django\\\\frontend\\\\src\\\\components\\\\CommunityPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityPost = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n\n  // Memoize the fetchComments function to avoid re-creating it on every render\n  const fetchComments = useCallback(async () => {\n    try {\n      const res = await axios.get(`http://localhost:8000/posts/${post.id}/comments/`);\n      setComments(res.data);\n    } catch (err) {\n      console.error('Failed to fetch comments:', err);\n    }\n  }, [post.id]); // Add post.id as dependency because fetchComments depends on it\n\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]); // Now fetchComments is correctly included in the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000${post.image}`,\n        alt: \"post\",\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: post.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 12\n        }, this), \": \", post.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), comments.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments yet. Be the first!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 35\n      }, this), comments.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: c.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), \": \", c.text]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(CommentForm, {\n        postId: post.id,\n        onCommentAdded: fetchComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunityPost, \"X/fDkkFa0j746uTD/Tm/yMG5ez8=\");\n_c = CommunityPost;\nexport default CommunityPost;\nvar _c;\n$RefreshReg$(_c, \"CommunityPost\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","jsxDEV","_jsxDEV","CommunityPost","post","_s","comments","setComments","fetchComments","res","get","id","data","err","console","error","className","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","user","content","length","map","c","text","CommentForm","postId","onCommentAdded","_c","$RefreshReg$"],"sources":["D:/react_django/frontend/src/components/CommunityPost.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CommunityPost = ({ post }) => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // Memoize the fetchComments function to avoid re-creating it on every render\r\n  const fetchComments = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:8000/posts/${post.id}/comments/`);\r\n      setComments(res.data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch comments:', err);\r\n    }\r\n  }, [post.id]); // Add post.id as dependency because fetchComments depends on it\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [fetchComments]); // Now fetchComments is correctly included in the dependency array\r\n\r\n  return (\r\n    <div className=\"community-post\">\r\n      <div className=\"post-content\">\r\n        <img src={`http://localhost:8000${post.image}`} alt=\"post\" className=\"post-image\" />\r\n        <p><strong>{post.user}</strong>: {post.content}</p>\r\n      </div>\r\n\r\n      <div className=\"comments-section\">\r\n        <h4>Comments</h4>\r\n        {comments.length === 0 && <p>No comments yet. Be the first!</p>}\r\n        {comments.map((c) => (\r\n          <div key={c.id} className=\"comment\">\r\n            <strong>{c.user}</strong>: {c.text}\r\n          </div>\r\n        ))}\r\n\r\n        <CommentForm postId={post.id} onCommentAdded={fetchComments} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}