{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_django\\\\frontend\\\\src\\\\components\\\\CardSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Cards.css\"; // Import external CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  // ✅ Use a single useRef() for an array of elements\n  const cardRefs = useRef([]);\n  const [visible, setVisible] = useState([]);\n  useEffect(() => {\n    const observers = cardRefs.current.map((card, index) => {\n      if (!card) return null; // Skip if ref is not assigned\n\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          setVisible(prev => {\n            const newState = [...prev];\n            newState[index] = entry.isIntersecting;\n            return newState;\n          });\n        });\n      }, {\n        threshold: 0.3\n      });\n      observer.observe(card);\n      return observer;\n    });\n    return () => {\n      observers.forEach((observer, index) => {\n        if (observer && cardRefs.current[index]) {\n          observer.unobserve(cardRefs.current[index]);\n        }\n      });\n    };\n  }, []); // ✅ No more dependency warning\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: [\"Image 1\", \"Image 2\", \"Image 3\", \"Image 4\"].map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => cardRefs.current[index] = el // ✅ Assign refs dynamically\n      ,\n      className: `card ${visible[index] ? \"visible\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/image${index + 1}.jpg`,\n        alt: `Card ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text, \" - Some info about this card.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"+j6oeEFhJ7U0UhWCfRBRjbzwL6E=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Cards","_s","cardRefs","visible","setVisible","observers","current","map","card","index","observer","IntersectionObserver","entries","forEach","entry","prev","newState","isIntersecting","threshold","observe","unobserve","className","children","text","ref","el","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react_django/frontend/src/components/CardSlider.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Cards.css\"; // Import external CSS\r\n\r\nconst Cards = () => {\r\n  // ✅ Use a single useRef() for an array of elements\r\n  const cardRefs = useRef([]);\r\n  const [visible, setVisible] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const observers = cardRefs.current.map((card, index) => {\r\n      if (!card) return null; // Skip if ref is not assigned\r\n\r\n      const observer = new IntersectionObserver(\r\n        (entries) => {\r\n          entries.forEach((entry) => {\r\n            setVisible((prev) => {\r\n              const newState = [...prev];\r\n              newState[index] = entry.isIntersecting;\r\n              return newState;\r\n            });\r\n          });\r\n        },\r\n        { threshold: 0.3 }\r\n      );\r\n\r\n      observer.observe(card);\r\n      return observer;\r\n    });\r\n\r\n    return () => {\r\n      observers.forEach((observer, index) => {\r\n        if (observer && cardRefs.current[index]) {\r\n          observer.unobserve(cardRefs.current[index]);\r\n        }\r\n      });\r\n    };\r\n  }, []); // ✅ No more dependency warning\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      {[\"Image 1\", \"Image 2\", \"Image 3\", \"Image 4\"].map((text, index) => (\r\n        <div\r\n          key={index}\r\n          ref={(el) => (cardRefs.current[index] = el)} // ✅ Assign refs dynamically\r\n          className={`card ${visible[index] ? \"visible\" : \"\"}`}\r\n        >\r\n          <img src={`/images/image${index + 1}.jpg`} alt={`Card ${index + 1}`} />\r\n          <p>{text} - Some info about this card.</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAMC,QAAQ,GAAGL,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAGH,QAAQ,CAACI,OAAO,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACtD,IAAI,CAACD,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC;;MAExB,MAAME,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;QACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;UACzBV,UAAU,CAAEW,IAAI,IAAK;YACnB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAAC;YAC1BC,QAAQ,CAACP,KAAK,CAAC,GAAGK,KAAK,CAACG,cAAc;YACtC,OAAOD,QAAQ;UACjB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,EACD;QAAEE,SAAS,EAAE;MAAI,CACnB,CAAC;MAEDR,QAAQ,CAACS,OAAO,CAACX,IAAI,CAAC;MACtB,OAAOE,QAAQ;IACjB,CAAC,CAAC;IAEF,OAAO,MAAM;MACXL,SAAS,CAACQ,OAAO,CAAC,CAACH,QAAQ,EAAED,KAAK,KAAK;QACrC,IAAIC,QAAQ,IAAIR,QAAQ,CAACI,OAAO,CAACG,KAAK,CAAC,EAAE;UACvCC,QAAQ,CAACU,SAAS,CAAClB,QAAQ,CAACI,OAAO,CAACG,KAAK,CAAC,CAAC;QAC7C;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7B,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAACf,GAAG,CAAC,CAACgB,IAAI,EAAEd,KAAK,kBAC5DV,OAAA;MAEEyB,GAAG,EAAGC,EAAE,IAAMvB,QAAQ,CAACI,OAAO,CAACG,KAAK,CAAC,GAAGgB,EAAI,CAAC;MAAA;MAC7CJ,SAAS,EAAE,QAAQlB,OAAO,CAACM,KAAK,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;MAAAa,QAAA,gBAErDvB,OAAA;QAAK2B,GAAG,EAAE,gBAAgBjB,KAAK,GAAG,CAAC,MAAO;QAACkB,GAAG,EAAE,QAAQlB,KAAK,GAAG,CAAC;MAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvEhC,OAAA;QAAAuB,QAAA,GAAIC,IAAI,EAAC,+BAA6B;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GALrCtB,KAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAjDID,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAmDX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}